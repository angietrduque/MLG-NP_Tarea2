p8 <- ggplot(Datos) + geom_histogram(aes(quality), color="black", fill="#c8d5b9")
p9 <- ggplot(Datos) + geom_histogram(aes(residual.sugar), color="black", fill="#4a7c59")
p10 <- ggplot(Datos) + geom_histogram(aes(sulphates), color="black", fill="#c4b7cb")
p11 <- ggplot(Datos) + geom_histogram(aes(total.sulfur.dioxide), color="black", fill="#98e2c6")
p12 <- ggplot(Datos) + geom_histogram(aes(volatile.acidity), color="black", fill="#06bee1")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol= 2)
corMatrix <- cor(Datos[, -13])
corrplot(corMatrix, order = "FPC", method = "color", type = "lower",
tl.cex = 0.6, tl.col = 'black')
cor(Datos[, -13]
cor(Datos[, -13]
library(corrplot)
corrplot(cor(Datos), method = "circle")
quality.cat
pHi
ggplot(data = Datos, aes(x=pHi, fill=pHi)) +
geom_bar(position="dodge") +
ylab("Calidad") + xlab("pH") +
scale_fill_discrete(name = "Calidad:", labels = c("Bajo", "Medio", "Alto")) +
scale_x_discrete(labels = c('No','Si'))
ggplot(datos, aes(y=, x=pHi, fill=as.factor(pHi))) + geom_boxplot(show.legend = T) +
theme(legend.position = "bottom") + xlab("") + ylab("Calidad")
ggplot(Datos, aes(y=quality, x=pHi, fill=as.factor(pHi))) + geom_boxplot(show.legend = T) +
theme(legend.position = "bottom") + xlab("") + ylab("Calidad")
p1 <- ggplot(wine) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f")
p2 <- ggplot(wine) + geom_histogram(aes(chlorides), color="black", fill="#ce6d8b")
p3 <- ggplot(wine) + geom_histogram(aes(citric.acid), color="black", fill="#cebbc9")
p4 <- ggplot(wine) + geom_histogram(aes(density), color="black", fill="#4056f4")
p5 <- ggplot(wine) + geom_histogram(aes(fixed.acidity), color="black", fill="#470ff4")
p6 <- ggplot(wine) + geom_histogram(aes(free.sulfur.dioxide), color="black", fill="#e54b4b")
p7 <- ggplot(wine) + geom_histogram(aes(pH), color="black", fill="#ffa987")
p8 <- ggplot(wine) + geom_histogram(aes(quality), color="black", fill="#c8d5b9")
p9 <- ggplot(wine) + geom_histogram(aes(residual.sugar), color="black", fill="#4a7c59")
p10 <- ggplot(wine) + geom_histogram(aes(sulphates), color="black", fill="#c4b7cb")
p11 <- ggplot(wine) + geom_histogram(aes(total.sulfur.dioxide), color="black", fill="#98e2c6")
p12 <- ggplot(wine) + geom_histogram(aes(volatile.acidity), color="black", fill="#06bee1")
p1 <- ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f")
p2 <- ggplot(Datos) + geom_histogram(aes(chlorides), color="black", fill="#ce6d8b")
p3 <- ggplot(Datos) + geom_histogram(aes(citric.acid), color="black", fill="#cebbc9")
p4 <- ggplot(Datos) + geom_histogram(aes(density), color="black", fill="#4056f4")
p5 <- ggplot(Datos) + geom_histogram(aes(fixed.acidity), color="black", fill="#470ff4")
p6 <- ggplot(Datos) + geom_histogram(aes(free.sulfur.dioxide), color="black", fill="#e54b4b")
p7 <- ggplot(Datos) + geom_histogram(aes(pH), color="black", fill="#ffa987")
p8 <- ggplot(Datos) + geom_histogram(aes(quality), color="black", fill="#c8d5b9")
p9 <- ggplot(Datos) + geom_histogram(aes(residual.sugar), color="black", fill="#4a7c59")
p10 <- ggplot(Datos) + geom_histogram(aes(sulphates), color="black", fill="#c4b7cb")
p11 <- ggplot(Datos) + geom_histogram(aes(total.sulfur.dioxide), color="black", fill="#98e2c6")
p12 <- ggplot(Datos) + geom_histogram(aes(volatile.acidity), color="black", fill="#06bee1")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol= 2)
grid.arrange(p1, p2, p3, p4, ncol= 2)
p1 <- ggplot(wine, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality, alcohol), colour = "#9cb380")
p10 <- ggplot(Datos, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality, total.sulfur.dioxide), colour = "#a11692")
p10
hola <- ggplot(Datos, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality, pHi), colour = "#a11692")
hola
ggplot(Datos, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality,fixed acidity), colour = "#a11692")
ggplot(Datos, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality,Datos$`fixed acidity`), colour = "#a11692")
ggplot(Datos, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality,`fixed acidity`), colour = "#a11692")
ggplot(Datos, aes(group = cut_width(`fixed acidity`, 1))) +
geom_boxplot(aes(`fixed acidity`,quality), colour = "#a11692")
ggplot(Datos, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality,`fixed acidity`), colour = "#a11692")
# Correlación de variables numericas
library(corrplot)
corrplot(cor(Datos), method = "circle")
corMatrix <- cor(Datos[, -13])
corrplot(corMatrix, order = "FPC", method = "color", type = "lower",
tl.cex = 0.6, tl.col = 'black')
p1 <- ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f")
p2 <- ggplot(Datos) + geom_histogram(aes(chlorides), color="black", fill="#ce6d8b")
p3 <- ggplot(Datos) + geom_histogram(aes(citric.acid), color="black", fill="#cebbc9")
p4 <- ggplot(Datos) + geom_histogram(aes(density), color="black", fill="#4056f4")
p5 <- ggplot(Datos) + geom_histogram(aes(fixed.acidity), color="black", fill="#470ff4")
p6 <- ggplot(Datos) + geom_histogram(aes(free.sulfur.dioxide), color="black", fill="#e54b4b")
p7 <- ggplot(Datos) + geom_histogram(aes(pH), color="black", fill="#ffa987")
p8 <- ggplot(Datos) + geom_histogram(aes(quality), color="black", fill="#c8d5b9")
p9 <- ggplot(Datos) + geom_histogram(aes(residual.sugar), color="black", fill="#4a7c59")
p10 <- ggplot(Datos) + geom_histogram(aes(sulphates), color="black", fill="#c4b7cb")
p11 <- ggplot(Datos) + geom_histogram(aes(total.sulfur.dioxide), color="black", fill="#98e2c6")
p12 <- ggplot(Datos) + geom_histogram(aes(volatile.acidity), color="black", fill="#06bee1")
p4
p1
p2
p3
p1 <- ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f",bins = 30)
p1
p1 <- ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f",bins = 5)
p1
p1 <- ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f",bins = 2)
p1
Datos$alcohol
alcohol
Datos$alcohol
str(Datos$alcohol)
ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f")
library(corrplot)
corrplot(cor(Datos), method = "circle")
df.subset <- df[,2:13]
ggpairs(df.subset, params = c(shape = I('.'), outlier.shape = I('.')))
df.subset <- Datos[,2:13]
df.subset
Datos[,2:13]
ggpairs(Datos, params = c(shape = I('.'), outlier.shape = I('.')))
ggpairs(Datos)
library(GGally)
install.packages("GGally")
n1 <- qplot(x = fixed.acidity, data = Datos,
binwidth = 0.1) +
scale_x_continuous(breaks = seq(4, 16, 1))
n1
n2 <- qplot(x = volatile.acidity, data = df,
binwidth = 0.01) +
scale_x_continuous(breaks = seq(0.12, 1.58, 0.1))
n2
qplot(x = volatile.acidity, data = df,
binwidth = 0.01) +
scale_x_continuous(breaks = seq(0.12, 1.58, 0.1))
n2 <- qplot(x = volatile.acidity, data = Datos,
binwidth = 0.01) +
scale_x_continuous(breaks = seq(0.12, 1.58, 0.1))
n2
library(dplyr)
library(gridExtra)
library(knitr)
library(kableExtra)
library(ggplot2)
install.packages("kableExtra")
library(kableExtra)
library(kableExtra)
library(ggplot2)
library(corrplot)
library(GGally)
library(pander)
library(GGally)
install.packages("pander")
library(pander)
library(readxl)
Datos <- read_excel("C:/Users/Angie Rodríguez/Desktop/Semestre 9/2. Modelos Lineales/MLG&NP_Tarea2/winequality-red.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
dim(Datos)
names(Datos)
str(Datos)
summary(Datos)
Datos$`fixed acidity`
Datos$alcohol
Datos$alcohol
min(Datos$alcohol)
max(Datos$alcohol)
min(Datos$alcohol)
max(Datos$alcohol)
# Estadisticas descriptivas
summary(Datos)
suppressMessages(library(dplyr))
suppressMessages(library(readxl))
suppressMessages(library(tidyverse))
suppressMessages(library(FactoMineR))
suppressMessages(library(factoextra))
suppressMessages(library(foreign))
suppressMessages(library(corrplot))
suppressMessages(library(polycor))
suppressMessages(library(psych))
suppressMessages(library(gplots))
suppressMessages(library(gridExtra))
suppressMessages(library(viridis))
suppressMessages(library(lsr))
suppressMessages(library(DescTools))
suppressMessages(library(magrittr))
suppressMessages(library(nlme))
suppressMessages(library(MASS))
suppressMessages(library(multilevel))
suppressMessages(library(plspm))
suppressMessages(library(reshape))
suppressMessages(library(homals))
suppressMessages(library(GGally))
suppressMessages(library(CCA))
suppressMessages(library(plotly))
suppressMessages(library(broom))
suppressMessages(library(readr))
suppressMessages(library(readxl))
#----------------------------------------------------------------------------------------#
# Fijar directorio
setwd("C:/Users/Angie Rodríguez/Desktop/Semestre 9/2. Modelos Lineales/MLG&NP_Tarea2")
#----------------------------------------------------------------------------------------#
# Actividad 2
#----------------------------------------------------------------------------------------#
# Cargar los datos
Datos <- read.table("Datos.txt",header=T,sep = ",")
Datos
str(Datos)
summary(Datos[,"pH"])
pHi <- cut(Datos$pH, breaks = c(2.6,3.1,3.6,4.1), labels = c("Bajo", "Medio", "Alto"))
head(pHi)
table(pHi)
ggplot(data = Datos, aes(x=pHi, fill=pHi)) +
geom_bar(position="dodge") +
ylab("") + xlab(" ") +
scale_fill_discrete(name = "Nivel pH:", labels = c("Bajo", "Medio", "Alto"))
ggplot(Datos, aes(y=Datos$density, x=pHi, fill=pHi)) + geom_boxplot(show.legend = T) +
scale_fill_discrete(name = "Ph:") +
xlab("") + ylab("Densidad")
ggplot(Datos, aes(y=Datos$alcohol, x=Datos$quality, group=Datos$quality)) + geom_boxplot(show.legend = T)
corrplot(cor(Datos), method = "number")
p1 <- ggplot(wine) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f")
p2 <- ggplot(wine) + geom_histogram(aes(chlorides), color="black", fill="#ce6d8b")
p3 <- ggplot(wine) + geom_histogram(aes(citric.acid), color="black", fill="#cebbc9")
p4 <- ggplot(wine) + geom_histogram(aes(density), color="black", fill="#4056f4")
p5 <- ggplot(wine) + geom_histogram(aes(fixed.acidity), color="black", fill="#470ff4")
p6 <- ggplot(wine) + geom_histogram(aes(free.sulfur.dioxide), color="black", fill="#e54b4b")
p7 <- ggplot(wine) + geom_histogram(aes(pH), color="black", fill="#ffa987")
p8 <- ggplot(wine) + geom_histogram(aes(quality), color="black", fill="#c8d5b9")
p9 <- ggplot(wine) + geom_histogram(aes(residual.sugar), color="black", fill="#4a7c59")
p10 <- ggplot(wine) + geom_histogram(aes(sulphates), color="black", fill="#c4b7cb")
p11 <- ggplot(wine) + geom_histogram(aes(total.sulfur.dioxide), color="black", fill="#98e2c6")
p12 <- ggplot(wine) + geom_histogram(aes(volatile.acidity), color="black", fill="#06bee1")
grid.arrange(p1, p2, p3, p4, ncol= 2)
p1 <- ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f")
p2 <- ggplot(Datos) + geom_histogram(aes(chlorides), color="black", fill="#ce6d8b")
p3 <- ggplot(Datos) + geom_histogram(aes(citric.acid), color="black", fill="#cebbc9")
p4 <- ggplot(Datos) + geom_histogram(aes(density), color="black", fill="#4056f4")
p5 <- ggplot(Datos) + geom_histogram(aes(fixed.acidity), color="black", fill="#470ff4")
p6 <- ggplot(Datos) + geom_histogram(aes(free.sulfur.dioxide), color="black", fill="#e54b4b")
p7 <- ggplot(Datos) + geom_histogram(aes(pH), color="black", fill="#ffa987")
p8 <- ggplot(Datos) + geom_histogram(aes(quality), color="black", fill="#c8d5b9")
p9 <- ggplot(Datos) + geom_histogram(aes(residual.sugar), color="black", fill="#4a7c59")
p10 <- ggplot(Datos) + geom_histogram(aes(sulphates), color="black", fill="#c4b7cb")
p11 <- ggplot(Datos) + geom_histogram(aes(total.sulfur.dioxide), color="black", fill="#98e2c6")
p12 <- ggplot(Datos) + geom_histogram(aes(volatile.acidity), color="black", fill="#06bee1")
grid.arrange(p1, p2, p3, p4, ncol= 2)
Datos$fixed.acidity
ggplot(Datos, aes(group = cut_width(fixed.acidity, 1))) +
geom_boxplot(aes(fixed.acidity,quality), colour = "#9cb380")
ggplot(wine, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality, fixed.acidity), colour = "#9cb380")
ggplot(Datos, aes(group = cut_width(quality, 1))) +
geom_boxplot(aes(quality, fixed.acidity), colour = "#9cb380")
ggplot(Datos, aes(group = cut_width(quality, 1)))+
geom_boxplot(aes(quality, fixed.acidity), colour = "#9cb380")+
xlab("Calidad")+ylab("Acidez fija")
# Estadisticas descriptivas
summary(Datos)
ggplot(data = Datos, aes(x=pHi, fill=pHi)) +
geom_bar(position="dodge") +
ylab("") + xlab(" ") +
scale_fill_discrete(name = "Nivel pH:", labels = c("Bajo", "Medio", "Alto"))
G1
grid.arrange(p1, p2, p3, p4, p5, p6, ncol= 3)
grid.arrange(p7, p8, p9, p10, p11, p12, ncol= 3)
grid.arrange(p1, p2, p3, p4, p5, p6,p7, p8, p9, p10, p11, p12, ncol= 3)
ggplot(Datos, aes(y=Datos$density, x=pHi, fill=pHi)) + geom_boxplot(show.legend = T) +
scale_fill_discrete(name = "Ph:") + xlab("") + ylab("Densidad")
ggplot(Datos, aes(y=Datos$alcohol, x=Datos$quality, group=Datos$quality)) + geom_boxplot(show.legend = T)
ggplot(Datos, aes(y=Datos$fixed.acidity, x=Datos$quality, group=Datos$quality)) + geom_boxplot(show.legend = T)
ggplot(Datos, aes(y=Datos$alcohol, x=Datos$quality, group=Datos$quality)) + geom_boxplot(show.legend = T)
G3
ggplot(Datos, aes(group = cut_width(quality, 1)))+
geom_boxplot(aes(quality, fixed.acidity), colour = "#9cb380")+
xlab("Calidad")+ylab("Acidez fija")
ggplot(Datos, aes(y=Datos$fixed.acidity, x=Datos$quality, group=Datos$quality)) + geom_boxplot(show.legend = T)
G1 <- ggplot(data = Datos, aes(x=pHi, fill=pHi)) +
geom_bar(position="dodge") + ylab("") + xlab(" ") +
scale_fill_discrete(name = "Nivel pH:", labels = c("Bajo", "Medio", "Alto"))
G1
G2 <- ggplot(Datos, aes(group = cut_width(quality, 1)))+ geom_boxplot(aes(quality, fixed.acidity), colour = "#9cb380")+
xlab("Calidad")+ylab("Acidez fija")
G2
G2 <- ggplot(Datos, aes(group = cut_width(quality, 1)))+
geom_boxplot(aes(quality, fixed.acidity), colour = "#417b5a")+
xlab("Calidad")+ylab("Acidez fija")
G2
# Modelo
Modelo <- glm(Datos$quality ~ Datos$fixed.acidity + pHi, data=Datos)
summary(Modelo)
#----------------------------------------------------------------------------------------#
# Fijar directorio
setwd("C:/Users/Angie Rodríguez/Desktop/Semestre 9/2. Modelos Lineales/MLG&NP_Tarea2")
#----------------------------------------------------------------------------------------#
# Fijar directorio
setwd("C:/Users/Angie Rodríguez/Desktop/Semestre 9/2. Modelos Lineales/MLG&NP_Tarea2")
View(Datos)
dim(Datos)
names(Datos)
str(Datos)
# Cargar los datos
Datos <- read.table("Datos.txt",header=T,sep = ",")
Datos
View(Datos)
dim(Datos)
names(Datos)
str(Datos)
summary(Datos)
p1 <- ggplot(Datos) + geom_histogram(aes(alcohol), color="black", fill="#ce2d4f")
p2 <- ggplot(Datos) + geom_histogram(aes(chlorides), color="black", fill="#ce6d8b")
p3 <- ggplot(Datos) + geom_histogram(aes(citric.acid), color="black", fill="#cebbc9")
p4 <- ggplot(Datos) + geom_histogram(aes(density), color="black", fill="#4056f4")
p5 <- ggplot(Datos) + geom_histogram(aes(fixed.acidity), color="black", fill="#470ff4")
p6 <- ggplot(Datos) + geom_histogram(aes(free.sulfur.dioxide), color="black", fill="#e54b4b")
p7 <- ggplot(Datos) + geom_histogram(aes(pH), color="black", fill="#ffa987")
p8 <- ggplot(Datos) + geom_histogram(aes(quality), color="black", fill="#c8d5b9")
p9 <- ggplot(Datos) + geom_histogram(aes(residual.sugar), color="black", fill="#4a7c59")
p10 <- ggplot(Datos) + geom_histogram(aes(sulphates), color="black", fill="#c4b7cb")
p11 <- ggplot(Datos) + geom_histogram(aes(total.sulfur.dioxide), color="black", fill="#98e2c6")
p12 <- ggplot(Datos) + geom_histogram(aes(volatile.acidity), color="black", fill="#06bee1")
grid.arrange(p1, p2, p3, p4, p5, p6,p7, p8, p9, p10, p11, p12, ncol= 3)
# Correlacion
corrplot(cor(Datos), method = "number")
summary(Datos[,"pH"])
pHi <- cut(Datos$pH, breaks = c(2.6,3.1,3.6,4.1), labels = c("Bajo", "Medio", "Alto"))
head(pHi)
pHi
G2 <- ggplot(Datos, aes(group = cut_width(quality, 1)))+
geom_boxplot(aes(quality, fixed.acidity), colour = "#417b5a")+
xlab("Calidad")+ylab("Acidez fija")
G2
plot1 <- ggplot(data = Datos, aes(x=fixed.acidity, fill=pHi)) +
geom_bar(position="dodge") +
ylab("Calidad") + xlab("Acidez fija") +
scale_fill_discrete(name = "pH:", labels = c("Bajo", "Medio", "Alto"))
ggplotly(plot1)
ggplot(datos, aes(y=quality, x=fixed.acidity, fill=as.factor(pHi))) + geom_boxplot(show.legend = T) +
scale_fill_discrete(name = "IntenciÃ³n de voto:", labels = c("Bajo", "Medio", "Alto")) +
theme(legend.position = "bottom") + xlab("") + ylab("Calidad")
BX <- ggplot(Datos, aes(y=quality, x=fixed.acidity, fill=as.factor(pHi))) + geom_boxplot(show.legend = T) +
scale_fill_discrete(name = "IntenciÃ³n de voto:", labels = c("Bajo", "Medio", "Alto")) +
theme(legend.position = "bottom") + xlab("") + ylab("Calidad")
ggplotly(BX)
#----------------------------------------------------------------------------------------#
# Fijar directorio
setwd("C:/Users/Angie Rodríguez/Desktop/Semestre 9/2. Modelos Lineales/MLG&NP_Tarea2")
Datos <- read.table("Datos.txt",header=T,sep = ",")
Datos
View(Datos)
dim(Datos)
names(Datos)
str(Datos)
table(wine$quality)
table(Datos$quality)
myTable
myTable=with(Datos,table(Datos$good))
myTable
with(Datos,table(Datos$good))
xtabs(~Datos$quality+Datos$good)
#----------------------------------------------------------------------------------------#
# Fijar directorio
setwd("C:/Users/Angie Rodríguez/Desktop/Semestre 9/2. Modelos Lineales/MLG&NP_Tarea2")
Datos <- read.table("Datos.txt",header=T,sep = ",")
Datos
dim(Datos)
names(Datos)
str(Datos)
describe(Datos)
# Estadisticas descriptivas
summary(Datos)
Datos$good<-ifelse(Datos$quality>6,1,0)
Datos
Datos$good
table(wine$quality)
table(Datos$quality)
table(Datos$quality)
myTable=with(Datos,table(Datos$good))
myTable
xtabs(~Datos$quality+Datos$good)
ggplot(data=Datos, aes(x=as.numeric(quality), y=fixed.acidity)) +
geom_jitter(alpha=1/3) +
geom_smooth(method='glm', aes(group = 1))+
xlab("Calidad") +
ylab("Acidez fija")
ggplot(data=Datos, aes(x=as.numeric(quality), y=fixed.acidity)) +
geom_jitter(alpha=1/3) +
geom_smooth(method='lm', aes(group = 1))+
xlab("Calidad") +
ylab("Acidez fija")
qplot(quality, data = Datos, binwidth = 1, color = color, geom = "fixed.acidity") +
scale_x_continuous(breaks = seq(3, 9, 1))
qplot(quality, data = Datos, binwidth = 1, color = color, geom = "density") +
scale_x_continuous(breaks = seq(3, 9, 1))
f <- function(dataset, x, y, z, opts=NULL) {
ggplot(dataset, aes_string(x = x, y = y, color = z)) +
geom_point(alpha = 1/5, position = position_jitter(h = 0), size = 2) +
geom_smooth(method = 'lm')
}
p <- f(Datos, "quality", "fixed.acidity", "color")
p + coord_cartesian(xlim=c(min(Datos$quality),1.005))
p <- f(Datos, "quality", "fixed.acidity")
p + coord_cartesian(xlim=c(min(Datos$quality),1.005))
f <- function(dataset, x, y, opts=NULL) {
ggplot(dataset, aes_string(x = x, y = y)) +
geom_point(alpha = 1/5, position = position_jitter(h = 0), size = 2) +
geom_smooth(method = 'lm')
}
p <- f(Datos, "quality", "fixed.acidity")
p + coord_cartesian(xlim=c(min(Datos$quality),1.005))
# converting 'quality' vector into factor variable
Datos$quality <- as.factor(Datos$quality)
ggplot(aes(x = pH, y = fixed.acidity, color = quality), data = Datos) +
facet_wrap(~color) +
geom_point(size = 3, alpha = 1/4) +
scale_color_identity(guide = 'legend') +
ylim(min(Datos$fixed.acidity), quantile(Datos$fixed.acidity, 0.95)) +
xlim(min(Datos$pH), quantile(Datos$pH, 0.95))
Datos$quality <- as.factor(Datos$quality)
ggplot(aes(x = pH, y = fixed.acidity, color = quality), data = Datos) +
geom_point(size = 3, alpha = 1/4) +
scale_color_identity(guide = 'legend') +
ylim(min(Datos$fixed.acidity), quantile(Datos$fixed.acidity, 0.95)) +
xlim(min(Datos$pH), quantile(Datos$pH, 0.95))
ggplot(data = Datos,
aes(x = pH, y = fixed.acidity, color = factor(quality))) +
geom_point(alpha = 1/2, position = position_jitter(h = 0), size = 2) +
coord_cartesian(xlim=c(min(data$pH),1.005), ylim=c(8,15)) +
scale_color_brewer(type='qual') +
xlab('Density') +
ylab('Alcohol') +
ggtitle('Density vs. Alcohol correlation by Quality')
ggplot(data = Datos,
aes(x = pH, y = fixed.acidity, color = factor(quality))) +
geom_point(alpha = 1/2, position = position_jitter(h = 0), size = 2) +
coord_cartesian(xlim=c(min(Datos$pH),1.005), ylim=c(8,15)) +
scale_color_brewer(type='qual') +
xlab('Density') +
ylab('Alcohol') +
ggtitle('Density vs. Alcohol correlation by Quality')
ggplot(aes(x = pH, y = fixed.acidity, color = quality), data = Datos) +
geom_point(size = 3, alpha = 1/4) +
scale_color_identity(guide = 'legend') +
ylim(min(Datos$fixed.acidity), quantile(Datos$fixed.acidity, 0.95)) +
xlim(min(Datos$pH), quantile(Datos$pH, 0.95))
min(Datos$fixed.acidity)
max(Datos$fixed.acidity)
min(Datos$pH)
max(Datos$pH)
ggplot(data = Datos,
aes(x = pH, y = fixed.acidity, color = factor(quality))) +
geom_point(alpha = 1/2, position = position_jitter(h = 0), size = 2) +
coord_cartesian(xlim=c(2,4), ylim=c(4,16)) +
scale_color_brewer(type='qual') +
xlab('pH') +
ylab('Acidez fija') +
ggtitle('')
ggplot(data = Datos,
aes(x = pH, y = fixed.acidity, color = factor(quality))) +
geom_point(alpha = 1/2, position = position_jitter(h = 0), size = 2) +
coord_cartesian(xlim=c(2,4), ylim=c(4,16)) +
scale_color_brewer(type='qual') +
xlab('pH') +
ylab('Acidez fija') +
ggtitle('Correlación entre pH y Acidez fija por Calidad')
ggplot(data = Datos,
aes(x = pH, y = fixed.acidity) )+
facet_wrap( ~ quality) +
geom_boxplot() +
xlab('pH') +
ylab('Acidez fija') +
ggtitle('Correlación entre pH y Acidez fija por Calidad')
ggplot(data = Datos,
aes(x = pH, y = fixed.acidity) )+
geom_boxplot() +
xlab('pH') +
ylab('Acidez fija') +
ggtitle('Correlación entre pH y Acidez fija por Calidad')
#----------------------------------------------------------------------------------------#
# Fijar directorio
setwd("C:/Users/Angie Rodríguez/Documents/GitHub/MLG-NP_Tarea2")
#----------------------------------------------------------------------------------------#
# Actividad 1
#----------------------------------------------------------------------------------------#
# Cargar los datos
library(readxl)
Tiempos <- read_excel("TiemposFalla.xlsx", col_types = c("numeric"))
#----------------------------------------------------------------------------------------#
# Actividad 1
#----------------------------------------------------------------------------------------#
# Cargar los datos
Tiempos <- read_excel("TiemposFalla.xlsx", col_types = c("numeric"))
str(Tiempos)
Tiempo_dias <- (Tiempos/24)
Tiempo_dias
#TamaÃ±o de la muestra
n <- 36
set.seed(123)
muestra <- sample_n(Tiempo_dias, size= n)
muestra
#SelecciÃ³n de la muestra
set.seed(123)
muestra <- sample_n(Tiempo_dias, size= n)
require(dplyr)
muestra <- sample_n(Tiempo_dias, size= n)
muestra
lambda = 2
sumatoria = sum(muestra^lambda)
expresion <- expression(-((lambda*n)/x)+(lambda)*(sumatoria)/(x^3)) # escribimos el polinomio
derivada <- D(expresion, "x") # Derivada del polinomio
x <- 0  # Cualquier valor diferente de aprox
aprox <- 368.26 # valor puntoinicial
while ( x != aprox) {
x <- aprox # Se le asigna el valor aproximado a x.
reemplazoexpresion <- eval(expresion) #Reemplaza el valor de x en "expresiÃ³n"
reemplazoderiv <- eval(derivada) #Reemplaza el valor de x en "derivada"
#newton
aprox <- x - (reemplazoexpresion/reemplazoderiv) #EcuaciÃ³n mÃ©todo de Newton
print(x)
}
